name: Release
on: workflow_dispatch
env:
  REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}
jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'npm' }

      - run: npm ci
      - run: npm run lint
      - run: npm test -- --watchAll=false

      - name: Derive version
        id: ver
        run: echo "VERSION=${{ github.run_number }}" >> "$GITHUB_OUTPUT"

      - name: Build Docker image
        run: |
          docker build -t $REGISTRY/app:${{ steps.ver.outputs.VERSION }} \
                       -t $REGISTRY/app:${{ steps.ver.outputs.VERSION }}_latest .

      - name: Login to YCR
        uses: yc-actions/yc-cr-login@v1
        with: { yc-sa-json-credentials: ${{ secrets.YC_SERVICE_ACCOUNT_KEY }} }

      - name: Push images
        run: docker push --all-tags $REGISTRY/app

      - name: Create release branch
        run: |
          git fetch origin
          git checkout -b releases/${{ steps.ver.outputs.VERSION }}
          git push -u origin releases/${{ steps.ver.outputs.VERSION }}

      - name: Tag release
        run: |
          git tag v${{ steps.ver.outputs.VERSION }}
          git push origin v${{ steps.ver.outputs.VERSION }}

      - name: Generate changelog text
        id: log
        run: |
          PREV=$(git describe --tags --abbrev=0 --match "v*" $(git rev-parse HEAD^) || echo "")
          echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" $PREV..HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Open Issue ðŸ“„
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "Release ${{ steps.ver.outputs.VERSION }}"
          content-file: .github/ISSUE_TEMPLATE/release.md
          labels: release
          assignees: ${{ github.actor }}
